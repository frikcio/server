version: '2'
   
services:
  db:
    container_name: boards_db
    image: postgres:13.3
    volumes:
      - db:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=$DB_NAME
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
    networks: 
      - server_net

  server:
    build: server/
    container_name: boards_server
    command: python manage.py runserver 0.0.0.0:${SERVER_PORT}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - ./server/:/home/server
      - ../server_media_storage:/home/server/accounts/media/
    env_file:
      - .env
    depends_on:
      - db
    networks: 
      - server_net
    restart: on-failure

  redis:
    container_name: boards_redis
    image: redis:6.2
    restart: always
    command: redis-server
    networks:
      - server_net

  celery:
    build: server/
    env_file:
      - .env
    container_name: boards_celery
    command: celery -A server worker -l INFO
    volumes:
      - ./server/:/home/server
    links:
      - redis
    networks:
      - server_net
    depends_on:
      - server
      - redis
    restart: always
  
  celery-beat:
    build: server/
    env_file:
      - .env
    container_name: boards_celery_beat
    command: celery -A server beat -s /home/celerybeat-schedule
    volumes:
      - ./server/:/home/server
    networks:
      - server_net
    depends_on:
      - server
      - redis
    restart: always
  
volumes:
  db:
networks:
  server_net:
